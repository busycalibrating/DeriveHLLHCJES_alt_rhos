//Steve Alkire
//17.05.2016

#include <vector>
#include <math.h>

#include "DeriveHLLHCJES/CustomRho.h"

#define GEV .001

ClassImp(CustomRho)

float CustomRho :: Grid(const xAOD::CaloTowerContainer* towers, float etalow, float etahigh, float r, float &sigma = defaultsigma){
  fastjet::MyGridMedianBackgroundEstimator gmbe1 = fastjet::MyGridMedianBackgroundEstimator(etalow,etahigh,r);
  
  std::vector<fastjet::PseudoJet> clusterPJs;
  
  for(int c = 0; c < towers->size(); ++c ){
    TLorentzVector tc;
    tc.SetPtEtaPhiE(towers->at(c)->pt(),towers->at(c)->eta(),towers->at(c)->phi(),towers->at(c)->e());
    if(tc.Pt() * GEV < 0 || tc.E() * GEV < 0) continue;     
    fastjet::PseudoJet PJ(tc.Px()*GEV,tc.Py()*GEV,tc.Pz()*GEV,tc.E()*GEV);
    clusterPJs.push_back(PJ);
  }
  
  gmbe1.set_particles(clusterPJs);
  sigma = gmbe1.sigma();
  return gmbe1.rho();  
}

float CustomRho :: Grid(const xAOD::CaloClusterContainer* clusters, float etalow, float etahigh, float r, float &sigma = defaultsigma){
  fastjet::MyGridMedianBackgroundEstimator gmbe1 = fastjet::MyGridMedianBackgroundEstimator(etalow,etahigh,r);
  
  std::vector<fastjet::PseudoJet> clusterPJs;
  
  for(int c = 0; c < clusters->size(); ++c ){
    if((clusters->at(c)->p4(CaloClusterState)).Pt() * GEV < 0 || (clusters->at(c)->p4(CaloClusterState)).E() * GEV < 0) continue; 
    
    fastjet::PseudoJet PJ((clusters->at(c)->p4(CaloClusterState)).Px()*GEV,(clusters->at(c)->p4(CaloClusterState)).Py()*GEV,(clusters->at(c)->p4(CaloClusterState)).Pz()*GEV,(clusters->at(c)->p4(CaloClusterState)).E()*GEV);
    clusterPJs.push_back(PJ);
  }
  gmbe1.set_particles(clusterPJs);
  sigma = gmbe1.sigma(); 
  return gmbe1.rho();
}
